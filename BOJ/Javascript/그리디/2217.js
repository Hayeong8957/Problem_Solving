/**
 * 문제: N(1 ≤ N ≤ 100,000)개의 로프가 있다. 이 로프를 이용하여 이런 저런 물체를 들어올릴 수 있다.
 * 각각의 로프는 그 굵기나 길이가 다르기 때문에 들 수 있는 물체의 중량이 서로 다를 수도 있다.
 * 하지만 여러 개의 로프를 병렬로 연결하면 각각의 로프에 걸리는 중량을 나눌 수 있다.
 * k개의 로프를 사용하여 중량이 w인 물체를 들어올릴 때, 각각의 로프에는 모두 고르게 w/k 만큼의 중량이 걸리게 된다.
 * 각 로프들에 대한 정보가 주어졌을 때, 이 로프들을 이용하여 들어올릴 수 있는 물체의 최대 중량을 구해내는 프로그램을 작성하시오.
 * 모든 로프를 사용해야 할 필요는 없으며, 임의로 몇 개의 로프를 골라서 사용해도 된다.
 *
 * 입력: 첫째 중레 정수 N이 주어진다. 다음 N개의 줄에는 각 로프가 버틸 수 있는 최대 중량이 주어진다.
 * 이 값은 10,000을 넘지 않는 자연수이다.
 *
 * 출력: 첫째 줄에 답을 출력한다.
 *
 * 풀이:
 * 1. 로프를 병렬로 연결하면 각각의 로프에는 모두 고르게 w/k 만큼의 중량이 걸리게 된다.
 * ==> 10, 15 무게 들어오고 2개 로프, 10+15/2=12.5, 근데 10은 12.5를 들 수가 없음.
 * 15는 10을 들 수 있음. 그래서 10이 들 수 있는 최고 무게는 10..
 *
 * 2. 모든 로프 사용해야 할 필요 없으며, 임의로 몇 개의 로프를 골라 사용해도 된다.
 * ==> 하나의 로프로 2번을 사용해도 된다는 뜻?
 *
 * 3. 최소 무게 * 로프 갯수가 정답일 듯이라 생각해서 다음과 같이 풀었더니 아니래..
 * const temp = input.map(Number).sort((a, b) => a - b);
 * console.log(temp[0] * parseInt(N));
 *
 *
 */

let [N, ...input] = require('fs')
  // .readFileSync('/dev/stdin')
  .readFileSync('/Users/shinhayeong/Problem_Solving/BOJ/Javascript/test.txt')
  .toString()
  .split('\n');

const temp = input.map(Number).sort((a, b) => b - a);
const answer = [];
for (let i = 0; i < N; i++) {
  answer.push(temp[i] * (i + 1));
}
console.log(Math.max(...answer));
