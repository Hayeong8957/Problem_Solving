/**
 * 문제 : 무한히 큰 배열에 다음과 같이 분수들이 적혀있다.
 * 이와 같이 나열된 분수들을 1/1 → 1/2 → 2/1 → 3/1 → 2/2 → … 과 같은 지그재그 순서로 차례대로 1번, 2번, 3번, 4번, 5번, … 분수라고 하자.
 * X가 주어졌을 때, X번째 분수를 구하는 프로그램을 작성하시오.
 *
 * 입력 :
 * 첫째 줄에 X(1 ≤ X ≤ 10,000,000)가 주어진다.
 *
 * ex1)
 * 1
 * 2
 * 3
 * 4
 * 5
 * 6
 * 7
 * 8
 * 9
 * 10
 *
 * 출력 : 첫째 줄에 분수를 출력한다.
 * ex1)
 * 1/1 [0][0] -> 각 자리수에 1씩 더하면 출력 분수가 나옴/?
 * --------------
 * 1/2 [0][1]
 * 2/1 [1][0]
 * --------------
 * 3/1 [2][0]
 * 2/2 [1][1]
 * 1/3 [0][2]
 * --------------
 * 1/4 [0][3]
 * 2/3 [1][2]
 * 3/2 [2][1]
 * ...
 *
 * 풀이 : 규칙을 찾아볼 때 대각선으로 생각,
 * 분자 ->
 * (짝수번째 줄 0,2,4...) : 5, 4, 3, 2, 1... => 내림차순
 * (홀수번째 줄 1, 3, 5...) : 1, 2, 3, 4...=> 오름차순
 * 분모 ->
 * (짝수번째 줄 0, 2, 4...) :1, 2, 3, 4, 5... => 오름차순
 * (홀수번째 줄 1, 3, 5...) : 4, 3, 2, 1... => 내림차순
 *
 * 1depth 들어갈 때마다 분수의 개수+1 => depth === 분수의 개수
 * 1depth -> 1 | 1
 * 2depth -> 2 | 2 3
 * 3depth -> 3 | 4 5 6
 * 4depth -> 4 | 7 8 9 10
 * 5depth -> 5 | 11 12 13 14 ...
 * ...
 *
 * 여기서 또 규칙을 찾아보자.. 내가 만약 숫자 5를 선택 했어 그러면 숫자 5가 있는 depth는 3
 * depth: 1 input: 5
 * depth: 2 input: 4
 * depth: 3 input: 2
 * 5번째 숫자는 3depth에 2번째 숫자임
 *
 *
 *  */

// let input = require('fs').readFileSync('/dev/stdin').toString().trim();
let N = Number(
  require('fs')
    .readFileSync(
      'c:/Users/HayeongShin/Algorithm/Problem_Solving/BOJ/Javascript/test.txt',
    )
    .toString()
    .trim(),
);
let depth = 1;
let a = 0,
  b = 0;

// 입력받은 숫자 depth구하기
// 입력 받은 X를 1씩 늘려가며 빼서 몇 번째 줄에 몇 번째 숫자인지 구함
while (N > depth) {
  N -= depth;
  depth++;
}

if (depth % 2 === 1) {
  a = depth - (N - 1); // 3-(2-1) = 3-1 = 2
  b = 1 + (N - 1); // 1+(2-1) = 1+1 = 2
} else {
  a = 1 + (N - 1);
  b = depth - (N - 1);
}

console.log(`${a}/${b}`);
